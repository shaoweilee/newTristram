{"version":3,"sources":["webpack:///./src/pages/detail/index.js"],"names":["__webpack_require__","_reactRedux","_reactRouterDom","_store","Detail","this","props","getDetailData","match","params","id","_props","title","content","authorNickname","createTime","updateTime","_react2","default","createElement","Fragment","_header2","className","alt","src","dangerouslySetInnerHTML","__html","React","Component","connect","state","getIn","dispatch","actionCreators","getDetailDataFunctionAC","withRouter"],"mappings":"yNAAAA,EAAA,IACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,IAEAG,EAAAH,EAAA,QACAA,EAAA,wDACAA,EAAA,SAEMI,qNAEFC,KAAKC,MAAMC,cAAcF,KAAKC,MAAME,MAAMC,OAAOC,qCAE1C,IAAAC,EAC4DN,KAAKC,MAAhEM,EADDD,EACCC,MAAOC,EADRF,EACQE,QAASC,EADjBH,EACiBG,eAAgBC,EADjCJ,EACiCI,WAAYC,EAD7CL,EAC6CK,WACpD,OACEC,EAAAC,QAAAC,cAACF,EAAAC,QAAME,SAAP,KACEH,EAAAC,QAAAC,cAACE,EAAAH,QAAD,MACAD,EAAAC,QAAAC,cAAA,WAASG,UAAU,qBACjBL,EAAAC,QAAAC,cAAA,WAASG,UAAU,mBACjBL,EAAAC,QAAAC,cAAA,MAAIG,UAAU,iBAAiBV,GAC/BK,EAAAC,QAAAC,cAAA,SAAOG,UAAU,gBACfL,EAAAC,QAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,QAAAC,cAAA,OAAKG,UAAU,gBAAgBC,IAAI,GAAGC,IAAI,MAE5CP,EAAAC,QAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,QAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,QAAAC,cAAA,QAAMG,UAAU,2BAA2BR,GAC3CG,EAAAC,QAAAC,cAAA,OAAKG,UAAU,2BAA2BC,IAAI,GAAGC,IAAI,KACrDP,EAAAC,QAAAC,cAAA,KAAGG,UAAU,6BAAb,QAEFL,EAAAC,QAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,QAAAC,cAAA,QAAMG,UAAU,4BAAhB,MAA+CP,EAA/C,KACAE,EAAAC,QAAAC,cAAA,QAAMG,UAAU,kCAAhB,MAAqDN,EAArD,QAQNC,EAAAC,QAAAC,cAAA,WAASG,UAAU,eAAeG,yBAA2BC,OAAQb,eAhC5Dc,UAAMC,sBAwDZ,EAAA3B,EAAA4B,SAhBE,SAACC,GAChB,OACElB,MAAOkB,EAAMC,OAAO,SAAU,UAC9BlB,QAASiB,EAAMC,OAAO,SAAU,YAChCjB,eAAgBgB,EAAMC,OAAO,SAAU,mBACvChB,WAAYe,EAAMC,OAAO,SAAU,eACnCf,WAAYc,EAAMC,OAAO,SAAU,iBAGnB,SAACC,GACnB,OACEzB,cADK,SACSG,GACZsB,EAASC,iBAAeC,wBAAwBxB,OAIvC,EAA+B,EAAAR,EAAAiC,YAAW/B","file":"6_19380a3d.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { actionCreators } from \"./store\";\r\nimport Header from \"../../common/header\";\r\nimport \"./index.scss\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getDetailData(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    const { title, content, authorNickname, createTime, updateTime } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <section className='article_container'>\r\n          <article className='article_content'>\r\n            <h1 className='article_title'>{title}</h1>\r\n            <aside className='article_info'>\r\n              <div className='info_author'>\r\n                <img className='author_avator' alt='' src='' />\r\n              </div>\r\n              <div className='info_detail'>\r\n                <div className='author_detail'>\r\n                  <span className='detail_item author_name'>{authorNickname}</span>\r\n                  <img className='detail_item author_badge' alt='' src='' />\r\n                  <a className='detail_item author_follow'>+关注</a>\r\n                </div>\r\n                <div className='article_detail'>\r\n                  <span className='detail_item article_time'>创作于{createTime}，</span>\r\n                  <span className='detail_item article_updateTime'>更新于{updateTime}。</span>\r\n                  {/* <span className='detail_item article_wordcount'>字数</span>\r\n                <span className='detail_item article_readcount'>阅读</span>\r\n                <span className='detail_item article_comment'>评论</span>\r\n              <span className='detail_item article_like'>喜欢</span> */}\r\n                </div>\r\n              </div>\r\n            </aside>\r\n            <section className='article_text' dangerouslySetInnerHTML={{ __html: content }}></section>\r\n          </article>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    title: state.getIn(['detail', 'title']),\r\n    content: state.getIn(['detail', 'content']),\r\n    authorNickname: state.getIn(['detail', 'authorNickname']),\r\n    createTime: state.getIn(['detail', 'createTime']),\r\n    updateTime: state.getIn(['detail', 'updateTime']),\r\n  };\r\n};\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getDetailData(id) {\r\n      dispatch(actionCreators.getDetailDataFunctionAC(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapState, mapDispatch)(withRouter(Detail));"],"sourceRoot":""}